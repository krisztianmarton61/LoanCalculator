@using System.Text
@using System.Net.Http.Headers

<div class="card mt-4">
    <div class="card-header">
        <h3>Monthly Payment Breakdown</h3>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <a href="@downloadUrl" download="loan_breakdown.csv" class="btn btn-success">
                <i class="bi bi-file-earmark-excel"></i> Export to Excel
            </a>
        </div>
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Month</th>
                        <th>Payment</th>
                        <th>Principal</th>
                        <th>Interest</th>
                        <th>Remaining Balance</th>
                    </tr>
                </thead>
                <tbody>
                    @if (monthlyData != null)
                    {
                        @foreach (var month in monthlyData)
                        {
                            <tr>
                                <td>@month.MonthNumber</td>
                                <td>@FormatCurrency(month.Payment)</td>
                                <td>@FormatCurrency(month.Principal)</td>
                                <td>@FormatCurrency(month.Interest)</td>
                                <td>@FormatCurrency(month.RemainingBalance)</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<MonthlyData> monthlyData { get; set; } = new();

    private string downloadUrl = string.Empty;

    public class MonthlyData
    {
        public int MonthNumber { get; set; }
        public decimal Payment { get; set; }
        public decimal Principal { get; set; }
        public decimal Interest { get; set; }
        public decimal RemainingBalance { get; set; }
    }

    private string FormatCurrency(decimal amount)
    {
        return amount.ToString("F2", System.Globalization.CultureInfo.InvariantCulture).Replace(".", ",");
    }

    protected override void OnInitialized()
    {
        GenerateDownloadUrl();
    }

    private void GenerateDownloadUrl()
    {
        if (monthlyData == null || !monthlyData.Any())
        {
            downloadUrl = string.Empty;
            return;
        }

        var csv = new StringBuilder();
        
        csv.Append('\uFEFF');
        
        csv.AppendLine("Month;Payment;Principal;Interest;Remaining Balance;Inflation Adjusted");
        
        foreach (var month in monthlyData)
        {
            csv.AppendLine($"{month.MonthNumber};" +
                          $"{month.Payment.ToString("F2", System.Globalization.CultureInfo.InvariantCulture).Replace(".", ",")};" +
                          $"{month.Principal.ToString("F2", System.Globalization.CultureInfo.InvariantCulture).Replace(".", ",")};" +
                          $"{month.Interest.ToString("F2", System.Globalization.CultureInfo.InvariantCulture).Replace(".", ",")};" +
                          $"{month.RemainingBalance.ToString("F2", System.Globalization.CultureInfo.InvariantCulture).Replace(".", ",")}");
        }

        var bytes = Encoding.UTF8.GetBytes(csv.ToString());
        var base64 = Convert.ToBase64String(bytes);
        
        downloadUrl = $"data:text/csv;base64,{base64}";
    }
} 